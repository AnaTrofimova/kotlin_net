item_message.xml:

<TextView xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/titleTextView"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:padding="16dp"
    android:textSize="18sp"
    android:clickable="true"
    android:focusable="true"
    android:background="?android:attr/selectableItemBackground" />

activity_edit_message.xml:

<EditText xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/titleEditText"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:hint="Enter Title"
    android:padding="16dp"
    android:textSize="18sp" />

<EditText xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/messageEditText"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:hint="Enter Message"
    android:padding="16dp"
    android:textSize="18sp" />

<Button
    android:id="@+id/saveButton"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:text="Save"
    android:layout_gravity="end"
    android:layout_marginTop="16dp" />
Создание класса модели (Message.kt):
kotlin
Copy code
data class Message(
    val id: String,
    val title: String,
    val number: Int
)

MessageAdapter.kt:

import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.TextView
import androidx.recyclerview.widget.RecyclerView

class MessageAdapter(private val messages: List<Message>, private val onItemClick: (Message) -> Unit) :
    RecyclerView.Adapter<MessageAdapter.MessageViewHolder>() {

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MessageViewHolder {
        val itemView = LayoutInflater.from(parent.context)
            .inflate(R.layout.item_message, parent, false)
        return MessageViewHolder(itemView)
    }

    override fun onBindViewHolder(holder: MessageViewHolder, position: Int) {
        val currentMessage = messages[position]
        holder.titleTextView.text = currentMessage.title
        holder.numberTextView.text = currentMessage.number.toString()

        holder.itemView.setOnClickListener {
            onItemClick(currentMessage)
        }
    }

    override fun getItemCount() = messages.size

    class MessageViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
        val titleTextView: TextView = itemView.findViewById(R.id.titleTextView)
        val numberTextView: TextView = itemView.findViewById(R.id.numberTextView)
    }
}

EditMessageActivity.kt:

import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import kotlinx.android.synthetic.main.activity_edit_message.*

class EditMessageActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_edit_message)

        val message = intent.getParcelableExtra<Message>("message")

        titleEditText.setText(message?.title)
        messageEditText.setText(message?.number.toString())

        saveButton.setOnClickListener {
            // Отправить POST-запрос с использованием Retrofit
        }
    }
}

MainActivity.kt:

import android.content.Intent
import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import androidx.recyclerview.widget.LinearLayoutManager
import kotlinx.android.synthetic.main.activity_main.*
import retrofit2.Call
import retrofit2.Callback
import retrofit2.Response
import retrofit2.Retrofit
import retrofit2.converter.gson.GsonConverterFactory

class MainActivity : AppCompatActivity() {

    private lateinit var messageAdapter: MessageAdapter

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        recyclerView.layoutManager = LinearLayoutManager(this)
        messageAdapter = MessageAdapter(emptyList()) { message -> editMessage(message) }
        recyclerView.adapter = messageAdapter

        fetchData()
    }

    private fun fetchData() {
        val retrofit = Retrofit.Builder()
            .baseUrl("https://your-api-url.com/")
            .addConverterFactory(GsonConverterFactory.create())
            .build()

        val api = retrofit.create(ApiService::class.java)
        api.getMessages().enqueue(object : Callback<List<Message>> {
            override fun onResponse(call: Call<List<Message>>, response: Response<List<Message>>) {
                if (response.isSuccessful) {
                    val messages = response.body()
                    messageAdapter = MessageAdapter(messages ?: emptyList()) { message -> editMessage
